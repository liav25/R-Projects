c("Israel","OECD"), fill=c("orange","green"), horiz=TRUE, cex=0.8)
#Regression line
abline(lm(total$average_score ~ total$salary, data = total), col = "blue")
#Salary vs math plot
plot(x = total$salary, y = total$math_score, main = "Salary vs. Math Score Plot",
ylab = "Pisa math score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs science plot
plot(x= total$salary, y = total$science_score, main = "Salary vs. Science Score Plot",
ylab = "Pisa science score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs reading plot
plot(x = total$salary, y = total$reading_score, main = "Salary vs. Reading Score Plot",
ylab = "Pisa reading score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs average plot
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (trim(total$Country)=="Israel"), "orange", ifelse( (trim(total$Country==c("International Average(OECD)"), "green", "black")))
#Add plot legend
#legend(100,100,legend=c("Israel", "OECD average"),col=c("orange", "green"))
legend("bottomright", inset=.02,
oecd_grades = data[439:444,]
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
#Salary vs average plot
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (trim(total$Country)=="Israel"), "orange", ifelse( (trim(total$Country)=="International Average (OECD)"), "green", "black")))
#Add plot legend
#legend(100,100,legend=c("Israel", "OECD average"),col=c("orange", "green"))
legend("bottomright", inset=.02,
c("Israel","OECD"), fill=c("orange","green"), horiz=TRUE, cex=0.8)
#Regression line
abline(lm(total$average_score ~ total$salary, data = total), col = "blue")
#Salary vs math plot
plot(x = total$salary, y = total$math_score, main = "Salary vs. Math Score Plot",
ylab = "Pisa math score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs science plot
plot(x= total$salary, y = total$science_score, main = "Salary vs. Science Score Plot",
ylab = "Pisa science score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs reading plot
plot(x = total$salary, y = total$reading_score, main = "Salary vs. Reading Score Plot",
ylab = "Pisa reading score", xlab = "Teachers salary",
pch =19, frame = FALSE)
oecd_grades = data[439:444,]
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
#Salary vs average plot
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (trim(total$Country)=="Israel"), "orange", ifelse( (trim(total$Country)=="International Average (OECD)" ), "green", "black")))
data$Country = trim(data$Country)
data$Country = trim(data$Country)
#Salary vs average plot
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (trim(total$Country)=="Israel"), "orange", ifelse( (trim(total$Country)=="International Average (OECD)" ), "green", "black")))
#Add plot legend
#legend(100,100,legend=c("Israel", "OECD average"),col=c("orange", "green"))
legend("bottomright", inset=.02,
c("Israel","OECD"), fill=c("orange","green"), horiz=TRUE, cex=0.8)
#Regression line
abline(lm(total$average_score ~ total$salary, data = total), col = "blue")
#Salary vs math plot
plot(x = total$salary, y = total$math_score, main = "Salary vs. Math Score Plot",
ylab = "Pisa math score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs science plot
plot(x= total$salary, y = total$science_score, main = "Salary vs. Science Score Plot",
ylab = "Pisa science score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs reading plot
plot(x = total$salary, y = total$reading_score, main = "Salary vs. Reading Score Plot",
ylab = "Pisa reading score", xlab = "Teachers salary",
pch =19, frame = FALSE)
oecd_grades = data[439:444,]
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
View(total)
total = merge(data, gathered_salaries, by=c("Country","year"))
head(total)
knitr::opts_chunk$set(echo = TRUE)
#we will use readxl library to read .xls files
library("readxl")
library(dplyr)
library(Unicode)
library(data.table)
library(reshape)
library(tidyr)
library(utf8)
library(gdata)
library(ggplot2)
library(RColorBrewer)
library(rworldmap)
library(ggmap)
workdir = "C:/Users/Liav/Desktop/Uni/R/targil1"
setwd(workdir)
pisa_math = read_excel("pisa.xlsx", sheet=1)
pisa_reading = read_excel("pisa.xlsx", sheet=2)
pisa_science = read_excel("pisa.xlsx", sheet=3)
head(pisa_math)
colnames(pisa_math)[2] = "math_score"
colnames(pisa_reading)[2] = "reading_score"
colnames(pisa_science)[2] = "science_score"
head(subset(pisa_math[order(pisa_math$math_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_science[order(pisa_science$science_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_reading[order(pisa_reading$reading_score, decreasing = TRUE), ], year == 2015), n=3L)
data = merge( merge( pisa_math, pisa_science, by = c("Country","year") ,all = TRUE, sort = TRUE), pisa_reading, by = c("Country","year"), all = TRUE, sort=TRUE )
head(data, n=7L)
sapply(data, class)
data[, 3:5] <- sapply(data[, 3:5], as.numeric)
sapply(data, class)
data$average_score <- rowMeans(data[,3:5], na.rm=TRUE)
head(data, n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2015)[,c(1,2,6)], n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2006)[,c(1,2,6)], n=3L)
salaries = read_excel("sal.xlsx", sheet=1)
sal_nominal = read_excel("sal.xlsx", sheet=2)
salaries$current = sal_nominal$current
salaries[16:18,]
salary_predict <- function(row, i) {
df <- data.frame(x=1:13,y=100*(1:13))
df$y = as.vector(unlist(salaries[i,3:15]))
df$x= as.numeric(colnames(salaries[3:15]))
model <- lm(y~x+1,data=df)
df$y_hat <- predict.lm(model, newdata = df)
df= df %>% mutate(y = ifelse(is.na(y), y_hat, y))
return(df$y)
}
for(i in 1:nrow(salaries)) {
row <- salaries[i,]
salaries[i,3:15] =  salary_predict(row,i)
}
salaries = salaries[,-c(2)]
salaries[16:18,]
for(i in 2:ncol(salaries)) {
salaries[i] = ((salaries[i]/salaries$`2017`)*salaries$current)
}
salaries[16:18,]
salaries = salaries[,-c(ncol(salaries))]
salaries[21,]
salaries = salaries[-c(21),]
row_name = "OECD (Average International)"
avg_vec = c(row_name, colMeans(salaries[2:ncol(salaries)]))
salaries <- rbind(avg_vec, salaries)
colnames(salaries)[1] <- "Country"
head(salaries)
salaries[,2:ncol(salaries)] = as.numeric(unlist(salaries[,2:ncol(salaries)]))
column = as.numeric(salaries$`2010`)
salaries[which(salaries$`2010`==max(column)),]
salaries[which(salaries$`2010`==min(column)),]
salaries[which (abs(column[2:nrow(salaries)]-column[1]) == min(abs(column[2:nrow(salaries)]-column[1])))+1,]
head(subset(salaries[order(salaries$`2015`, decreasing = TRUE), c(1,12)]), n=5L)
twenty_fifteen = data[which(data$year==2015),]
twenty_fifteen = merge( salaries[(which(colnames(salaries)==c("Country","2015")))], twenty_fifteen, by = c("Country") ,all = TRUE, sort = TRUE)
head(twenty_fifteen[order(twenty_fifteen$`2015`, decreasing = TRUE),],n = 5)
changes = salaries[c(1,2,ncol(salaries))]
changes$change = (changes$`2017`/changes$`2005`)*100
head(changes[order(changes$change, decreasing = TRUE),],n = 5)
oecd_grades = data[439:444,]
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
oecd_grades = data[439:444,]
row_name = "International Average (OECD)"
oecd_grades = cbind(row_name,oecd_grades)
colnames(oecd_grades)[1] = "Country"
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
View(total)
total = merge(data, gathered_salaries, by=c("Country","year"))
View(total)
oecd_grades = data[439:444,]
row_name = "International Average (OECD)"
oecd_grades = cbind(row_name,oecd_grades)
colnames(oecd_grades)[1] = "Country"
oecd_grades = data[439:444,]
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
View(total)
oecd_grades = data[439:444,]
data = rbind(data,oecd_grades[3:6,])
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
View(total)
View(oecd_grades)
View(salaries)
View(gathered_salaries)
View(data)
View(salaries)
knitr::opts_chunk$set(echo = TRUE)
#we will use readxl library to read .xls files
library("readxl")
library(dplyr)
library(Unicode)
library(data.table)
library(reshape)
library(tidyr)
library(utf8)
library(gdata)
library(ggplot2)
library(RColorBrewer)
library(rworldmap)
library(ggmap)
workdir = "C:/Users/Liav/Desktop/Uni/R/targil1"
setwd(workdir)
pisa_math = read_excel("pisa.xlsx", sheet=1)
pisa_reading = read_excel("pisa.xlsx", sheet=2)
pisa_science = read_excel("pisa.xlsx", sheet=3)
head(pisa_math)
colnames(pisa_math)[2] = "math_score"
colnames(pisa_reading)[2] = "reading_score"
colnames(pisa_science)[2] = "science_score"
head(subset(pisa_math[order(pisa_math$math_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_science[order(pisa_science$science_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_reading[order(pisa_reading$reading_score, decreasing = TRUE), ], year == 2015), n=3L)
data = merge( merge( pisa_math, pisa_science, by = c("Country","year") ,all = TRUE, sort = TRUE), pisa_reading, by = c("Country","year"), all = TRUE, sort=TRUE )
head(data, n=7L)
sapply(data, class)
data[, 3:5] <- sapply(data[, 3:5], as.numeric)
sapply(data, class)
data$average_score <- rowMeans(data[,3:5], na.rm=TRUE)
head(data, n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2015)[,c(1,2,6)], n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2006)[,c(1,2,6)], n=3L)
salaries = read_excel("sal.xlsx", sheet=1)
sal_nominal = read_excel("sal.xlsx", sheet=2)
salaries$current = sal_nominal$current
salaries[16:18,]
salary_predict <- function(row, i) {
df <- data.frame(x=1:13,y=100*(1:13))
df$y = as.vector(unlist(salaries[i,3:15]))
df$x= as.numeric(colnames(salaries[3:15]))
model <- lm(y~x+1,data=df)
df$y_hat <- predict.lm(model, newdata = df)
df= df %>% mutate(y = ifelse(is.na(y), y_hat, y))
return(df$y)
}
for(i in 1:nrow(salaries)) {
row <- salaries[i,]
salaries[i,3:15] =  salary_predict(row,i)
}
salaries = salaries[,-c(2)]
salaries[16:18,]
for(i in 2:ncol(salaries)) {
salaries[i] = ((salaries[i]/salaries$`2017`)*salaries$current)
}
salaries[16:18,]
salaries = salaries[,-c(ncol(salaries))]
salaries[21,]
salaries = salaries[-c(21),]
row_name = "International Average (OECD)"
avg_vec = c(row_name, colMeans(salaries[2:ncol(salaries)]))
salaries <- rbind(avg_vec, salaries)
colnames(salaries)[1] <- "Country"
head(salaries)
salaries[,2:ncol(salaries)] = as.numeric(unlist(salaries[,2:ncol(salaries)]))
column = as.numeric(salaries$`2010`)
salaries[which(salaries$`2010`==max(column)),]
salaries[which(salaries$`2010`==min(column)),]
salaries[which (abs(column[2:nrow(salaries)]-column[1]) == min(abs(column[2:nrow(salaries)]-column[1])))+1,]
head(subset(salaries[order(salaries$`2015`, decreasing = TRUE), c(1,12)]), n=5L)
twenty_fifteen = data[which(data$year==2015),]
twenty_fifteen = merge( salaries[(which(colnames(salaries)==c("Country","2015")))], twenty_fifteen, by = c("Country") ,all = TRUE, sort = TRUE)
head(twenty_fifteen[order(twenty_fifteen$`2015`, decreasing = TRUE),],n = 5)
changes = salaries[c(1,2,ncol(salaries))]
changes$change = (changes$`2017`/changes$`2005`)*100
head(changes[order(changes$change, decreasing = TRUE),],n = 5)
oecd_grades = data[439:444,]
data = rbind(data,oecd_grades[3:6,])
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
View(total)
knitr::opts_chunk$set(echo = TRUE)
#we will use readxl library to read .xls files
library("readxl")
library(dplyr)
library(Unicode)
library(data.table)
library(reshape)
library(tidyr)
library(utf8)
library(gdata)
library(ggplot2)
library(RColorBrewer)
library(rworldmap)
library(ggmap)
workdir = "C:/Users/Liav/Desktop/Uni/R/targil1"
setwd(workdir)
pisa_math = read_excel("pisa.xlsx", sheet=1)
pisa_reading = read_excel("pisa.xlsx", sheet=2)
pisa_science = read_excel("pisa.xlsx", sheet=3)
head(pisa_math)
colnames(pisa_math)[2] = "math_score"
colnames(pisa_reading)[2] = "reading_score"
colnames(pisa_science)[2] = "science_score"
head(subset(pisa_math[order(pisa_math$math_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_science[order(pisa_science$science_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_reading[order(pisa_reading$reading_score, decreasing = TRUE), ], year == 2015), n=3L)
data = merge( merge( pisa_math, pisa_science, by = c("Country","year") ,all = TRUE, sort = TRUE), pisa_reading, by = c("Country","year"), all = TRUE, sort=TRUE )
head(data, n=7L)
sapply(data, class)
data[, 3:5] <- sapply(data[, 3:5], as.numeric)
sapply(data, class)
data$average_score <- rowMeans(data[,3:5], na.rm=TRUE)
head(data, n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2015)[,c(1,2,6)], n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2006)[,c(1,2,6)], n=3L)
salaries = read_excel("sal.xlsx", sheet=1)
sal_nominal = read_excel("sal.xlsx", sheet=2)
salaries$current = sal_nominal$current
salaries[16:18,]
salary_predict <- function(row, i) {
df <- data.frame(x=1:13,y=100*(1:13))
df$y = as.vector(unlist(salaries[i,3:15]))
df$x= as.numeric(colnames(salaries[3:15]))
model <- lm(y~x+1,data=df)
df$y_hat <- predict.lm(model, newdata = df)
df= df %>% mutate(y = ifelse(is.na(y), y_hat, y))
return(df$y)
}
for(i in 1:nrow(salaries)) {
row <- salaries[i,]
salaries[i,3:15] =  salary_predict(row,i)
}
salaries = salaries[,-c(2)]
salaries[16:18,]
for(i in 2:ncol(salaries)) {
salaries[i] = ((salaries[i]/salaries$`2017`)*salaries$current)
}
salaries[16:18,]
salaries = salaries[,-c(ncol(salaries))]
salaries[21,]
salaries = salaries[-c(21),]
row_name = "International Average (OECD)"
avg_vec = c(row_name, colMeans(salaries[2:ncol(salaries)]))
salaries <- rbind(avg_vec, salaries)
colnames(salaries)[1] <- "Country"
head(salaries)
salaries[,2:ncol(salaries)] = as.numeric(unlist(salaries[,2:ncol(salaries)]))
column = as.numeric(salaries$`2010`)
salaries[which(salaries$`2010`==max(column)),]
salaries[which(salaries$`2010`==min(column)),]
salaries[which (abs(column[2:nrow(salaries)]-column[1]) == min(abs(column[2:nrow(salaries)]-column[1])))+1,]
head(subset(salaries[order(salaries$`2015`, decreasing = TRUE), c(1,12)]), n=5L)
twenty_fifteen = data[which(data$year==2015),]
twenty_fifteen = merge( salaries[(which(colnames(salaries)==c("Country","2015")))], twenty_fifteen, by = c("Country") ,all = TRUE, sort = TRUE)
head(twenty_fifteen[order(twenty_fifteen$`2015`, decreasing = TRUE),],n = 5)
changes = salaries[c(1,2,ncol(salaries))]
changes$change = (changes$`2017`/changes$`2005`)*100
head(changes[order(changes$change, decreasing = TRUE),],n = 5)
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
knitr::opts_chunk$set(echo = TRUE)
#we will use readxl library to read .xls files
library("readxl")
library(dplyr)
library(Unicode)
library(data.table)
library(reshape)
library(tidyr)
library(utf8)
library(gdata)
library(ggplot2)
library(RColorBrewer)
library(rworldmap)
library(ggmap)
workdir = "C:/Users/Liav/Desktop/Uni/R/targil1"
setwd(workdir)
pisa_math = read_excel("pisa.xlsx", sheet=1)
pisa_reading = read_excel("pisa.xlsx", sheet=2)
pisa_science = read_excel("pisa.xlsx", sheet=3)
head(pisa_math)
colnames(pisa_math)[2] = "math_score"
colnames(pisa_reading)[2] = "reading_score"
colnames(pisa_science)[2] = "science_score"
head(subset(pisa_math[order(pisa_math$math_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_science[order(pisa_science$science_score, decreasing = TRUE), ], year == 2015), n=3L)
head(subset(pisa_reading[order(pisa_reading$reading_score, decreasing = TRUE), ], year == 2015), n=3L)
data = merge( merge( pisa_math, pisa_science, by = c("Country","year") ,all = TRUE, sort = TRUE), pisa_reading, by = c("Country","year"), all = TRUE, sort=TRUE )
head(data, n=7L)
sapply(data, class)
data[, 3:5] <- sapply(data[, 3:5], as.numeric)
sapply(data, class)
data$average_score <- rowMeans(data[,3:5], na.rm=TRUE)
head(data, n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2015)[,c(1,2,6)], n=3L)
head(subset(data[order(data$average_score, decreasing = TRUE), ], year == 2006)[,c(1,2,6)], n=3L)
salaries = read_excel("sal.xlsx", sheet=1)
sal_nominal = read_excel("sal.xlsx", sheet=2)
salaries$current = sal_nominal$current
salaries[16:18,]
salary_predict <- function(row, i) {
df <- data.frame(x=1:13,y=100*(1:13))
df$y = as.vector(unlist(salaries[i,3:15]))
df$x= as.numeric(colnames(salaries[3:15]))
model <- lm(y~x+1,data=df)
df$y_hat <- predict.lm(model, newdata = df)
df= df %>% mutate(y = ifelse(is.na(y), y_hat, y))
return(df$y)
}
for(i in 1:nrow(salaries)) {
row <- salaries[i,]
salaries[i,3:15] =  salary_predict(row,i)
}
salaries = salaries[,-c(2)]
salaries[16:18,]
for(i in 2:ncol(salaries)) {
salaries[i] = ((salaries[i]/salaries$`2017`)*salaries$current)
}
salaries[16:18,]
salaries = salaries[,-c(ncol(salaries))]
salaries[21,]
salaries = salaries[-c(21),]
row_name = "International Average (OECD)"
avg_vec = c(row_name, colMeans(salaries[2:ncol(salaries)]))
salaries <- rbind(avg_vec, salaries)
colnames(salaries)[1] <- "Country"
head(salaries)
salaries[,2:ncol(salaries)] = as.numeric(unlist(salaries[,2:ncol(salaries)]))
column = as.numeric(salaries$`2010`)
salaries[which(salaries$`2010`==max(column)),]
salaries[which(salaries$`2010`==min(column)),]
salaries[which (abs(column[2:nrow(salaries)]-column[1]) == min(abs(column[2:nrow(salaries)]-column[1])))+1,]
head(subset(salaries[order(salaries$`2015`, decreasing = TRUE), c(1,12)]), n=5L)
twenty_fifteen = data[which(data$year==2015),]
twenty_fifteen = merge( salaries[(which(colnames(salaries)==c("Country","2015")))], twenty_fifteen, by = c("Country") ,all = TRUE, sort = TRUE)
head(twenty_fifteen[order(twenty_fifteen$`2015`, decreasing = TRUE),],n = 5)
changes = salaries[c(1,2,ncol(salaries))]
changes$change = (changes$`2017`/changes$`2005`)*100
head(changes[order(changes$change, decreasing = TRUE),],n = 5)
gathered_salaries = gather(data = salaries, key = "year", value = salary, -Country)
head(gathered_salaries[order(gathered_salaries$Country, decreasing = FALSE),])
total = merge(data, gathered_salaries, by=c("Country","year"))
head(total)
#Salary vs average plot
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (trim(total$Country)=="Israel"), "orange", ifelse( (total$Country==c("OECD (Average International)")), "green", "black")))
#Salary vs average plot
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (trim(total$Country)=="Israel"), "orange", ifelse( (trim(total$Country==c("OECD (Average International)"))), "green", "black")))
#Salary vs average plot
total$Country = trim(total$Country)
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (trim(total$Country)=="Israel"), "orange", ifelse( (trim(total$Country==c("OECD (Average International)"))), "green", "black")))
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (total$Country)=="Israel", "orange", ifelse( (trim(total$Country==c("OECD (Average International)"))), "green", "black")))
#Salary vs average plot
total$Country = trim(total$Country)
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (total$Country)=="Israel", "orange", ifelse( (trim(total$Country==c("OECD (Average International)"))), "green", "black")))
#Salary vs average plot
total$Country = trim(total$Country)
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (total$Country)=="Israel", "orange", ifelse( (total$Country==c("OECD (Average International)")), "green", "black")))
#Add plot legend
#legend(100,100,legend=c("Israel", "OECD average"),col=c("orange", "green"))
legend("bottomright", inset=.02,
c("Israel","OECD"), fill=c("orange","green"), horiz=TRUE, cex=0.8)
#Regression line
abline(lm(total$average_score ~ total$salary, data = total), col = "blue")
#Salary vs math plot
plot(x = total$salary, y = total$math_score, main = "Salary vs. Math Score Plot",
ylab = "Pisa math score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs science plot
plot(x= total$salary, y = total$science_score, main = "Salary vs. Science Score Plot",
ylab = "Pisa science score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs reading plot
plot(x = total$salary, y = total$reading_score, main = "Salary vs. Reading Score Plot",
ylab = "Pisa reading score", xlab = "Teachers salary",
pch =19, frame = FALSE)
View(total)
#Salary vs average plot
total$Country = trim(total$Country)
plot(x = total$salary, y = total$average_score, main = "Salary vs. Average Score Plot", ylab = "Pisa average score", xlab = "Teachers salary",
pch =19, frame = FALSE, col =
ifelse( (total$Country)=="Israel", "orange", ifelse( (total$Country==c("International Average (OECD)")), "green", "black")))
#Add plot legend
#legend(100,100,legend=c("Israel", "OECD average"),col=c("orange", "green"))
legend("bottomright", inset=.02,
c("Israel","OECD"), fill=c("orange","green"), horiz=TRUE, cex=0.8)
#Regression line
abline(lm(total$average_score ~ total$salary, data = total), col = "blue")
#Salary vs math plot
plot(x = total$salary, y = total$math_score, main = "Salary vs. Math Score Plot",
ylab = "Pisa math score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs science plot
plot(x= total$salary, y = total$science_score, main = "Salary vs. Science Score Plot",
ylab = "Pisa science score", xlab = "Teachers salary",
pch =19, frame = FALSE)
#Salary vs reading plot
plot(x = total$salary, y = total$reading_score, main = "Salary vs. Reading Score Plot",
ylab = "Pisa reading score", xlab = "Teachers salary",
pch =19, frame = FALSE)
