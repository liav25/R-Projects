"0","#this function is computing the bset sum for the hand"
"0","#param hand - a vector of cards"
"0","#return the best sum player can get in blackjack (include above 21, but then compute the minimum)"
"0","sum_hand = function(hand){"
"0","  if(length(hand)==0){"
"0","    return(0)"
"0","  }"
"0","    if( ""A"" %in% hand){"
"0","      aces = which(hand == ""A"")"
"0","      hand_without_aces = as.numeric(hand[-aces])"
"0","      if(sum(hand_without_aces)<=10){"
"0","        if(length(aces)==1){"
"0","          return(sum(hand_without_aces)+11)"
"0","        }"
"0","        if(length(aces==2)){"
"0","          return(sum(hand_without_aces)+12)"
"0","        }"
"0","        if(length(aces==3)){"
"0","          return(sum(hand_without_aces)+13)"
"0","        }"
"0","        if(length(aces==4)){"
"0","          return(sum(hand_without_aces)+14)"
"0","        }"
"0","      }"
"0","      else{"
"0","          if(length(aces)==1){"
"0","          return(sum(hand_without_aces)+1)"
"0","        }"
"0","        if(length(aces==2)){"
"0","          return(sum(hand_without_aces)+2)"
"0","        }"
"0","        if(length(aces==3)){"
"0","          return(sum(hand_without_aces)+3)"
"0","        }"
"0","        if(length(aces==4)){"
"0","          return(sum(hand_without_aces)+4)"
"0","        }"
"0","      }"
"0","      "
"0","      "
"0","    }"
"0","  else{"
"0","    return(sum(as.numeric(hand)))"
"0","  }"
"0","}"
